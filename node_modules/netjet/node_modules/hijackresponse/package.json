{
  "_args": [
    [
      {
        "raw": "hijackresponse@https://registry.npmjs.org/hijackresponse/-/hijackresponse-2.0.0.tgz",
        "scope": null,
        "escapedName": "hijackresponse",
        "name": "hijackresponse",
        "rawSpec": "https://registry.npmjs.org/hijackresponse/-/hijackresponse-2.0.0.tgz",
        "spec": "https://registry.npmjs.org/hijackresponse/-/hijackresponse-2.0.0.tgz",
        "type": "remote"
      },
      "/Volumes/OSX-Storage/Documents/projects/viral-loop"
    ]
  ],
  "_from": "hijackresponse@>=2.0.0 <3.0.0",
  "_id": "hijackresponse@2.0.0",
  "_inCache": true,
  "_location": "/netjet/hijackresponse",
  "_phantomChildren": {},
  "_requested": {
    "raw": "hijackresponse@https://registry.npmjs.org/hijackresponse/-/hijackresponse-2.0.0.tgz",
    "scope": null,
    "escapedName": "hijackresponse",
    "name": "hijackresponse",
    "rawSpec": "https://registry.npmjs.org/hijackresponse/-/hijackresponse-2.0.0.tgz",
    "spec": "https://registry.npmjs.org/hijackresponse/-/hijackresponse-2.0.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/netjet"
  ],
  "_resolved": "https://registry.npmjs.org/hijackresponse/-/hijackresponse-2.0.0.tgz",
  "_shasum": "0d88c0491865beeb0c66bcc0649c781ea90016e7",
  "_shrinkwrap": null,
  "_spec": "hijackresponse@https://registry.npmjs.org/hijackresponse/-/hijackresponse-2.0.0.tgz",
  "_where": "/Volumes/OSX-Storage/Documents/projects/viral-loop",
  "author": {
    "name": "Gustav Nikolaj",
    "email": "gustavnikolaj@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/gustavnikolaj/hijackresponse/issues"
  },
  "contributors": [
    {
      "name": "Andreas Lind",
      "email": "andreas@one.com"
    }
  ],
  "dependencies": {},
  "description": "Hijack HttpResponses",
  "devDependencies": {
    "bufferedstream": "3.1.1",
    "compression": "1.6.1",
    "coveralls": "2.11.4",
    "errorhandler": "1.4.2",
    "express": "4.13.3",
    "istanbul": "0.3.20",
    "lodash": "3.10.1",
    "mocha": "2.3.2",
    "passerror": "1.1.0",
    "sinon": "1.17.3",
    "standard": "5.3.0",
    "unexpected": "10.13.0",
    "unexpected-express": "8.2.0",
    "unexpected-sinon": "10.2.0"
  },
  "homepage": "https://github.com/gustavnikolaj/hijackresponse",
  "license": "ISC",
  "main": "lib/hijackResponse.js",
  "name": "hijackresponse",
  "optionalDependencies": {},
  "readme": "# hijackresponse\n\n[![npm version](https://badge.fury.io/js/hijackresponse.svg)](https://www.npmjs.com/package/hijackresponse)\n[![Build Status](https://travis-ci.org/gustavnikolaj/hijackresponse.svg)](https://travis-ci.org/gustavnikolaj/hijackresponse)\n[![Coverage Status](https://coveralls.io/repos/gustavnikolaj/hijackresponse/badge.svg?branch=master&service=github)](https://coveralls.io/github/gustavnikolaj/hijackresponse?branch=master)\n[![Dependency Status](https://david-dm.org/gustavnikolaj/hijackresponse.svg)](https://david-dm.org/gustavnikolaj/hijackresponse)\n\nModule that allows you to rewrite HTTP responses from middleware further down\nthe stack, such as static providers, HTTP proxies etc.\n\nThis module is the spiritual successor to\n[express-hijackresponse](https://github.com/papandreou/express-hijackresponse)\nattempting to solve the same goals. The differences from the original module are\nprimarily that the API is slightly different, there's no direct coupling to\nexpress and it supports streams2.\n\nIt's mostly useful for content filters. The original use case is injecting an\ninline JavaScript into all HTML responses in\n[LiveStyle](https://github.com/One-com/livestyle). It is also used in a series\nof transpiler and preprocessing middleware:\n\n- [express-compiless](https://github.com/papandreou/express-compiless)\n- [express-processimage](https://github.com/papandreou/express-processimage)\n- [express-extractheaders](https://github.com/papandreou/express-extractheaders)\n- [express-autoprefixer](https://github.com/gustavnikolaj/express-autoprefixer)\n- [express-jsxtransform](https://github.com/gustavnikolaj/express-jsxtransform)\n\n## Installation\n\n```\n$ npm install hijackresponse\n```\n\n## Usage\n\n```js\nvar express = require('express');\nvar hijackResponse = require('hijackresponse');\n\nvar app = express();\n\napp.use(function (req, res, next) {\n    hijackResponse(res, function (err, res) {\n        if (err) {\n            res.unhijack(); // Make the original res object work again\n            return next(err);\n        }\n\n        // Don't hijack HTML responses:\n        if (/^text\\/html(?:;$)/.test(res.getHeader('Content-Type'))) {\n            return res.unhijack();\n        }\n\n        res.setHeader('X-Hijacked', 'yes!');\n        res.removeHeader('Content-Length');\n\n        res\n            .pipe(transformStream)\n            .pipe(res);\n    });\n    // next() must be called explicitly, even when hijacking the response:\n    next();\n});\n```\n\n## License\n\nThis module is published under the ISC License. See the `LICENCE` file for\nadditional details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gustavnikolaj/hijackresponse.git"
  },
  "scripts": {
    "coverage": "istanbul --include-all-sources cover _mocha",
    "lint": "standard",
    "submit-coveralls": "<coverage/lcov.info coveralls",
    "test": "mocha",
    "travis": "npm run lint && npm run coverage"
  },
  "version": "2.0.0"
}
