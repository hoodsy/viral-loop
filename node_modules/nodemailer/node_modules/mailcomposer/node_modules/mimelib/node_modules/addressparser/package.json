{
  "_args": [
    [
      {
        "raw": "addressparser@https://registry.npmjs.org/addressparser/-/addressparser-0.3.2.tgz",
        "scope": null,
        "escapedName": "addressparser",
        "name": "addressparser",
        "rawSpec": "https://registry.npmjs.org/addressparser/-/addressparser-0.3.2.tgz",
        "spec": "https://registry.npmjs.org/addressparser/-/addressparser-0.3.2.tgz",
        "type": "remote"
      },
      "/Volumes/OSX-Storage/Documents/projects/viral-loop"
    ]
  ],
  "_from": "addressparser@>=0.3.2 <0.4.0",
  "_id": "addressparser@0.3.2",
  "_inCache": true,
  "_location": "/nodemailer/mailcomposer/mimelib/addressparser",
  "_phantomChildren": {},
  "_requested": {
    "raw": "addressparser@https://registry.npmjs.org/addressparser/-/addressparser-0.3.2.tgz",
    "scope": null,
    "escapedName": "addressparser",
    "name": "addressparser",
    "rawSpec": "https://registry.npmjs.org/addressparser/-/addressparser-0.3.2.tgz",
    "spec": "https://registry.npmjs.org/addressparser/-/addressparser-0.3.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/nodemailer/mailcomposer/mimelib"
  ],
  "_resolved": "https://registry.npmjs.org/addressparser/-/addressparser-0.3.2.tgz",
  "_shasum": "59873f35e8fcf6c7361c10239261d76e15348bb2",
  "_shrinkwrap": null,
  "_spec": "addressparser@https://registry.npmjs.org/addressparser/-/addressparser-0.3.2.tgz",
  "_where": "/Volumes/OSX-Storage/Documents/projects/viral-loop",
  "author": {
    "name": "Andris Reinman"
  },
  "bugs": {
    "url": "https://github.com/andris9/addressparser/issues"
  },
  "dependencies": {},
  "description": "Parse e-mail addresses",
  "devDependencies": {
    "chai": "^1.10.0",
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.10.0",
    "grunt-mocha-test": "^0.12.4",
    "mocha": "^2.1.0"
  },
  "homepage": "https://github.com/andris9/addressparser#readme",
  "license": "MIT",
  "main": "src/addressparser.js",
  "name": "addressparser",
  "optionalDependencies": {},
  "readme": "# addressparser\n\nParse e-mail address fields. Input can be a single address (`\"andris@kreata.ee\"`), a formatted address (`\"Andris Reinman <andris@kreata.ee>\"`), comma separated list of addresses (`\"andris@kreata.ee, andris.reinman@kreata.ee\"`), an address group (`\"disclosed-recipients:andris@kreata.ee;\"`) or a mix of all the formats.\n\nIn addition to comma the semicolon is treated as the list delimiter as well (except when used in the group syntax), so a value `\"andris@kreata.ee; andris.reinman@kreata.ee\"` is identical to `\"andris@kreata.ee, andris.reinman@kreata.ee\"`.\n\n## Installation\n\nInstall with npm\n\n```\nnpm install addressparser\n```\n\n## Usage\n\nInclude the module\n\n```javascript\nvar addressparser = require('addressparser');\n```\n\nParse some address strings with `addressparser(field)`\n\n```javascript\nvar addresses = addressparser('andris <andris@tr.ee>');\nconsole.log(addresses); // [{name: \"andris\", address:\"andris@tr.ee\"}]\n```\n\nAnd when using groups\n\n```javascript\naddressparser('Composers:\"Bach, Sebastian\" <sebu@example.com>, mozart@example.com (Mozzie);');\n```\n\nthe result would be\n\n```\n[\n    {\n        name: \"Composers\",\n        group: [\n            {\n                address: \"sebu@example.com\",\n                name: \"Bach, Sebastian\"\n            },\n            {\n                address: \"mozart@example.com\",\n                name: \"Mozzie\"\n            }\n        ]\n    }\n]\n```\n\n> Be prepared though that groups might be nested.\n\n## Notes\n\nThis module does not decode any mime-word or punycode encoded strings, it is only a basic parser for parsing the base data, you need to decode the encoded parts later by yourself\n\n## License\n\n**MIT**",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/andris9/addressparser.git"
  },
  "scripts": {
    "test": "grunt"
  },
  "version": "0.3.2"
}
