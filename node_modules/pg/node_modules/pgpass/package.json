{
  "_args": [
    [
      {
        "raw": "pgpass@https://registry.npmjs.org/pgpass/-/pgpass-0.0.3.tgz",
        "scope": null,
        "escapedName": "pgpass",
        "name": "pgpass",
        "rawSpec": "https://registry.npmjs.org/pgpass/-/pgpass-0.0.3.tgz",
        "spec": "https://registry.npmjs.org/pgpass/-/pgpass-0.0.3.tgz",
        "type": "remote"
      },
      "/Volumes/OSX-Storage/Documents/projects/viral-loop"
    ]
  ],
  "_from": "pgpass@0.0.3",
  "_id": "pgpass@0.0.3",
  "_inCache": true,
  "_location": "/pg/pgpass",
  "_phantomChildren": {},
  "_requested": {
    "raw": "pgpass@https://registry.npmjs.org/pgpass/-/pgpass-0.0.3.tgz",
    "scope": null,
    "escapedName": "pgpass",
    "name": "pgpass",
    "rawSpec": "https://registry.npmjs.org/pgpass/-/pgpass-0.0.3.tgz",
    "spec": "https://registry.npmjs.org/pgpass/-/pgpass-0.0.3.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/pg"
  ],
  "_resolved": "https://registry.npmjs.org/pgpass/-/pgpass-0.0.3.tgz",
  "_shasum": "12e67e343b3189c2f31206ebc9cc0befffcf9140",
  "_shrinkwrap": null,
  "_spec": "pgpass@https://registry.npmjs.org/pgpass/-/pgpass-0.0.3.tgz",
  "_where": "/Volumes/OSX-Storage/Documents/projects/viral-loop",
  "author": {
    "name": "Hannes HÃ¶rl",
    "email": "hannes.hoerl+pgpass@snowreporter.com"
  },
  "bugs": {
    "url": "https://github.com/hoegaarden/pgpass/issues"
  },
  "dependencies": {
    "split": "~0.3"
  },
  "description": "Module for reading .pgpass",
  "devDependencies": {
    "jscoverage": "~0.3.8",
    "jshint": "~2.3.0",
    "mocha": "~1.14.0",
    "pg": "~2.11.1",
    "pg-escape": "0.0.2",
    "resumer": "0.0.0",
    "tmp": "0.0.23"
  },
  "homepage": "https://github.com/hoegaarden/pgpass#readme",
  "keywords": [
    "postgres",
    "pg",
    "pgpass",
    "password",
    "postgresql"
  ],
  "license": "BSD-2-Clause",
  "main": "lib/index",
  "name": "pgpass",
  "optionalDependencies": {},
  "readme": "# pgpass\n\n[![Build Status](https://travis-ci.org/hoegaarden/pgpass.png?branch=master)](https://travis-ci.org/hoegaarden/pgpass)\n\n## Install\n\n```sh\nnpm install pgpass\n```\n\n## Usage\n```js\nvar pgPass = require('pgpass');\n\nvar connInfo = {\n  'host' : 'pgserver' ,\n  'user' : 'the_user_name' ,\n};\n\npgPass(connInfo, function(pass){\n  conn_info.password = pass;\n  // connect to postgresql server\n});\n```\n\n## Description\n\nThis module tries to read the `~/.pgpass` file (or the equivalent for windows systems). If the environment variable `PGPASSFILE` is set, this file is used instead. If everything goes right, the password from said file is passed to the callback; if the password cannot be read `undefined` is passed to the callback.\n\nCases where `undefined` is returned:\n\n- the environment variable `PGPASSWORD` is set\n- the file cannot be read (wrong permissions, no such file, ...)\n- for non windows systems: the file is write-/readable by the group or by other users\n- there is no matching line for the given connection info\n\nThere should be no need to use this module directly; it is already included in `node-postgresq`.\n\n## Configuration\n\nThe module reads the environment variable `PGPASS_NO_DEESCAPE` to decide if the the read tokens from the password file should be de-escaped or not. Default is to do de-escaping. For further information on this see [this commit](https://github.com/postgres/postgres/commit/8d15e3ec4fcb735875a8a70a09ec0c62153c3329).\n\n\n## Tests\n\nThere are tests in `./test/`; including linting and coverage testing. Running `npm test` runs:\n\n- `jshint`\n- `mocha` tests\n- `jscoverage` and `mocha -R html-cov`\n\nYou can see the coverage report in `coverage.html`.\n\n\n## Development, Patches, Bugs, ...\n\nIf you find Bugs or have improvments, please feel free to open a issue on github. If you provide a pull request, I'm more than happy to merge them, just make sure to add tests for your changes.\n\n## Links\n\n- https://github.com/hoegaarden/node-pgpass\n- http://www.postgresql.org/docs/current/static/libpq-pgpass.html\n- https://wiki.postgresql.org/wiki/Pgpass\n- https://github.com/postgres/postgres/blob/master/src/interfaces/libpq/fe-connect.c\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/hoegaarden/pgpass.git"
  },
  "scripts": {
    "coverage": "rm -rf -- lib-cov ; jscoverage lib lib-cov && mocha --recursive -R html-cov > coverage.html",
    "hint": "jshint --verbose lib test",
    "pretest": "chmod 600 ./test/_pgpass",
    "test": "npm run hint && mocha --recursive -R list && npm run coverage"
  },
  "version": "0.0.3"
}
